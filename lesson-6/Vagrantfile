Vagrant.configure("2") do |config|
  config.vm.provider :libvirt do |libvirt|
    libvirt.driver = "kvm"
    libvirt.memory = 1024
    libvirt.uri = 'qemu:///system'
    libvirt.default_prefix = 'vagrant_'
  end

  config.vm.define "server" do |server|
    server.vm.box = "generic/ubuntu2204"
    server.vm.hostname = "server"

    server.vm.network :private_network,
      type: "dhcp",
      libvirt__forward_mode: "nat"

    server.vm.provision "shell", inline: <<-SHELL
    apt-get update -qq
    DEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends openssh-server avahi-daemon
    sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
    echo "root:vagrant" | chpasswd
    mkdir -p /root/.ssh
    touch /root/.ssh/authorized_keys
    chmod 700 /root/.ssh
    chmod 600 /root/.ssh/authorized_keys
    systemctl restart sshd
    # Включаем mDNS для разрешения имен
    systemctl enable avahi-daemon
    systemctl start avahi-daemon
    SHELL
  end

  config.vm.define "client" do |client|
    client.vm.box = "generic/ubuntu2204"
    client.vm.hostname = "client"

    client.vm.network :private_network,
      type: "dhcp",
      libvirt__forward_mode: "nat"

    client.vm.provision "shell", privileged: false, inline: <<-SHELL
    sudo apt-get update -qq
    sudo apt-get install -y -qq openssh-client sshpass avahi-daemon

    mkdir -p ~/.ssh
    [ ! -f ~/.ssh/id_rsa ] && ssh-keygen -t rsa -N "" -f ~/.ssh/id_rsa

    sudo systemctl enable avahi-daemon
    sudo systemctl start avahi-daemon

    echo "Ожидаем доступности сервера..."
    until ping -c1 server.local &>/dev/null; do sleep 1; done

    sshpass -p 'vagrant' ssh-copy-id -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa.pub root@server.local

    echo "alias sshserver='ssh -i ~/.ssh/id_rsa root@server.local'" >> ~/.bashrc
    SHELL
    end
  end
